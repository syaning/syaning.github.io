import{_ as s,o as a,c as n,a as l}from"./app.9c5b3fde.js";const C=JSON.parse('{"title":"Node\u6838\u5FC3\u6A21\u5757\u4E4Bbuffer","description":"","frontmatter":{"layout":"post","title":"Node\u6838\u5FC3\u6A21\u5757\u4E4Bbuffer","date":"2016-02-29 11:00:00 +0800"},"headers":[{"level":2,"title":"1. ArrayBuffer\uFF0CTypedArray\uFF0CDataView","slug":"_1-arraybuffer-typedarray-dataview","link":"#_1-arraybuffer-typedarray-dataview","children":[]},{"level":2,"title":"2. Buffer\u7684\u5B9E\u73B0","slug":"_2-buffer\u7684\u5B9E\u73B0","link":"#_2-buffer\u7684\u5B9E\u73B0","children":[]},{"level":2,"title":"3. Buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565","slug":"_3-buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565","link":"#_3-buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565","children":[{"level":3,"title":"3.1 new Buffer(size)","slug":"_3-1-new-buffer-size","link":"#_3-1-new-buffer-size","children":[]},{"level":3,"title":"3.2 new Buffer(str[, encoding])","slug":"_3-2-new-buffer-str-encoding","link":"#_3-2-new-buffer-str-encoding","children":[]},{"level":3,"title":"3.3 \u5176\u5B83\u65B9\u5F0F\u521B\u5EFABuffer","slug":"_3-3-\u5176\u5B83\u65B9\u5F0F\u521B\u5EFAbuffer","link":"#_3-3-\u5176\u5B83\u65B9\u5F0F\u521B\u5EFAbuffer","children":[]}]}],"relativePath":"my/post/2016-02-29-node-core-buffer.md"}'),o={name:"my/post/2016-02-29-node-core-buffer.md"},p=l(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u672C\u6587\u6240\u4F7F\u7528\u7684Node\u7248\u672C\u4E3A5.7.0</p></div><h2 id="_1-arraybuffer-typedarray-dataview" tabindex="-1">1. ArrayBuffer\uFF0CTypedArray\uFF0CDataView <a class="header-anchor" href="#_1-arraybuffer-typedarray-dataview" aria-hidden="true">#</a></h2><p>\u5728\u4E86\u89E3Buffer\u4E4B\u524D\uFF0C\u9700\u8981\u5BF9ArrayBuffer\uFF0CTypedArray\u548CDataView\u7B49\u6982\u5FF5\u6709\u6240\u4E86\u89E3\uFF0C\u53EF\u4EE5\u53C2\u8003\u4EE5\u4E0B\u8D44\u6599\uFF1A</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">MDN ArrayBuffer</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">MDN TypedArray</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">MDN DataView</a></li><li><a href="http://www.2ality.com/2015/09/typed-arrays.html" target="_blank" rel="noreferrer">Typed Arrays in ECMAScript 6</a></li><li><a href="http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/" target="_blank" rel="noreferrer">Typed Arrays: Binary Data in the Browser</a></li></ul><p>\u7B80\u800C\u8A00\u4E4B\uFF0CArrayBuffer\u662F\u4E00\u7247\u5185\u5B58\u533A\u57DF\uFF0C\u7528\u6765\u771F\u6B63\u5B58\u50A8\u6570\u636E\uFF1B\u800CTypedArray\u548CDataView\u662F\u76F8\u5E94\u7684ArrayBuffer\u7684\u89C6\u56FE\uFF0C\u7528\u6765\u5BF9\u8FD9\u7247\u5185\u5B58\u533A\u57DF\u8FDB\u884C\u64CD\u4F5C\u3002</p><p>TypedArray\u548CDataView\u7684\u533A\u522B\u662F\uFF1ATypedArray\u53EA\u80FD\u662F\u540C\u4E00\u79CD\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u800CDataView\u53EF\u4EE5\u662F\u4E0D\u540C\u7C7B\u578B\u7684\u6570\u636E\u3002</p><h2 id="_2-buffer\u7684\u5B9E\u73B0" tabindex="-1">2. Buffer\u7684\u5B9E\u73B0 <a class="header-anchor" href="#_2-buffer\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h2><p>Buffer\u7684<a href="https://nodejs.org/dist/latest/docs/api/buffer.html" target="_blank" rel="noreferrer">API\u6587\u6863</a>\u91CC\u63D0\u5230\uFF1A</p><blockquote><p>Prior to the introduction of <code>TypedArray</code> in ECMAScript 2015 (ES6), the JavaScript language had no mechanism for reading or manipulating streams of binary data. The <code>Buffer</code> class was introduced as part of the Node.js API to make it possible to interact with octet streams in the context of things like TCP streams and file system operations.</p><p>Now that <code>TypedArray</code> has been added in ES6, the <code>Buffer</code> class implements the <code>Uint8Array</code> API in a manner that is more optimized and suitable for Node.js&#39; use cases.</p></blockquote><p>\u56E0\u6B64\uFF0C\u76EE\u524DBuffer\u7684\u5B9E\u73B0\u662F\u57FA\u4E8EUint8Array\u7684\uFF0C\u4F46\u662F\u5BF9\u63A5\u53E3\u548C\u64CD\u4F5C\u8FDB\u884C\u4E86\u4F18\u5316\uFF0C\u4F7F\u7528\u8D77\u6765\u4F1A\u66F4\u52A0\u4FBF\u6377\u3002</p><h2 id="_3-buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565" tabindex="-1">3. Buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565 <a class="header-anchor" href="#_3-buffer\u7684\u5185\u5B58\u5206\u914D\u7B56\u7565" aria-hidden="true">#</a></h2><p>\u901A\u5E38\uFF0C\u521B\u5EFA\u65B0\u7684Buffer\u7684\u65F6\u5019\uFF0C\u6709\u5982\u4E0B\u51E0\u79CD\u65B9\u6CD5\uFF1A</p><ul><li><code>new Buffer(array)</code></li><li><code>new Buffer(buffer)</code></li><li><code>new Buffer(arrayBuffer)</code></li><li><code>new Buffer(size)</code></li><li><code>new Buffer(str[, encoding])</code></li></ul><p>Buffer\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Buffer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Common case.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// If less than zero, or NaN.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">allocate</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Slightly less common case.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fromString</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Unusual.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fromObject</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-1-new-buffer-size" tabindex="-1">3.1 <code>new Buffer(size)</code> <a class="header-anchor" href="#_3-1-new-buffer-size" aria-hidden="true">#</a></h3><p>\u5148\u6765\u8003\u8651\u6700\u7B80\u5355\u7684\u60C5\u5F62\uFF0C\u5373<code>new Buffer(size)</code>\uFF0C\u6B64\u65F6\u8C03\u7528\u4E86<code>allocate(size)</code>\u3002<code>allocate</code>\u53CA\u5176\u76F8\u5173\u7684\u4E00\u4E9B\u5B9A\u4E49\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">poolSize </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> poolSize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> poolOffset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> allocPool</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createBuffer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ui8</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Uint8Array</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPrototypeOf</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ui8</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ui8</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createPool</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">flags</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">kNoZeroFill</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">allocPool</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createBuffer</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">createPool</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">alignPool</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Ensure aligned slices</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x7</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">allocate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createBuffer</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">createPool</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">allocPool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alignPool</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Even though this is checked above, the conditional is a safety net and</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// sanity check to prevent any subsequent typed array allocation from not</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// being zero filled.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">flags</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">kNoZeroFill</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createBuffer</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u603B\u7684\u6765\u8BF4\uFF0C\u5185\u5B58\u7684\u5206\u914D\u7B56\u7565\u9075\u5FAA\u4EE5\u4E0B\u539F\u5219\uFF1A\u5927\u5757\u5185\u5B58\u76F4\u63A5\u5206\u914D\uFF0C\u5C0F\u5757\u5185\u5B58\u901A\u8FC7\u5185\u5B58\u6C60\u6765\u5206\u914D\u3002</p><p>\u5185\u5B58\u6C60\u7684\u5927\u5C0F\u5B9A\u4E49\u4E3A<code>Buffer.poolSize</code>\uFF0C\u53738K\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u521D\u6B21\u52A0\u8F7D\u8BE5\u6A21\u5757\u7684\u65F6\u5019\uFF0C\u5C31\u6267\u884C\u4E86\u4E00\u6B21<code>createPool()</code>\uFF0C\u5373\u521B\u5EFA\u4E86\u4E00\u4E2A8K\u5927\u5C0F\u7684\u5185\u5B58\u6C60\u3002\u4E4B\u540E\u6BCF\u6B21\u5728\u521B\u5EFA\u65B0\u7684Buffer\u7684\u65F6\u5019\uFF0C\u5982\u679C\u5C0F\u4E8E4K\uFF08<code>size &lt; (Buffer.poolSize &gt;&gt;&gt; 1)</code>\uFF09\uFF0C\u90A3\u4E48\u901A\u8FC7\u5185\u5B58\u6C60\u6765\u5206\u914D\uFF1B\u5426\u5219\u76F4\u63A5<code>createBuffer(size)</code>\u6765\u5206\u914D\u3002</p><p>\u5728\u901A\u8FC7\u5185\u5B58\u6C60\u6765\u5206\u914D\u5185\u5B58\u7684\u65F6\u5019\uFF0C\u4F1A\u5148\u68C0\u67E5\u5185\u5B58\u6C60\u7684\u53EF\u7528\u5BB9\u91CF\u662F\u5426\u6EE1\u8DB3\u6240\u9700\u5927\u5C0F\uFF0C\u5982\u679C\u4E0D\u6EE1\u8DB3\uFF0C\u90A3\u4E48\u4F1A\u65B0\u521B\u5EFA\u4E00\u4E2A\u5185\u5B58\u6C60\u3002\u76F8\u5173\u4EE3\u7801\u7247\u6BB5\u4E3A\uFF1A</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// in function allocate</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (size </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> (poolSize </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> poolOffset))</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">createPool</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>\u4E00\u4E2A\u7279\u4F8B\u662F\uFF0C\u5F53size\u4E3A0\u7684\u65F6\u5019\uFF0C\u76F4\u63A5<code>createBuffer(size)</code>\u6765\u5206\u914D\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u540E\u9762\u5BF9size\u4EE5\u53CA\u5185\u5B58\u6C60\u53EF\u7528\u5BB9\u91CF\u7684\u5224\u65AD\uFF0C\u4ECE\u800C\u63D0\u9AD8\u5206\u914D\u6548\u7387\u3002</p><h3 id="_3-2-new-buffer-str-encoding" tabindex="-1">3.2 <code>new Buffer(str[, encoding])</code> <a class="header-anchor" href="#_3-2-new-buffer-str-encoding" aria-hidden="true">#</a></h3><p>\u5728\u8BE5\u60C5\u5F62\u4E0B\uFF0C\u8C03\u7528\u7684\u662F\u5982\u4E0B\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fromString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">byteLength</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">binding</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createFromString</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">poolSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">createPool</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">actual</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">allocPool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">encoding</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">allocPool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">actual</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">poolOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">actual</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">alignPool</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F53\u5B57\u7B26\u4E32\u7684\u5B57\u8282\u957F\u5EA6\u5927\u4E8E4K\u7684\u65F6\u5019\uFF0C\u901A\u8FC7C++\u5C42\u9762\u6765\u8FDB\u884C\u5206\u914D\uFF0C\u5426\u5219\u901A\u8FC7\u5185\u5B58\u6C60\u6765\u5206\u914D\u3002</p><h3 id="_3-3-\u5176\u5B83\u65B9\u5F0F\u521B\u5EFAbuffer" tabindex="-1">3.3 \u5176\u5B83\u65B9\u5F0F\u521B\u5EFABuffer <a class="header-anchor" href="#_3-3-\u5176\u5B83\u65B9\u5F0F\u521B\u5EFAbuffer" aria-hidden="true">#</a></h3><ul><li><code>new Buffer(buffer)</code>\uFF1A\u5148\u901A\u8FC7<code>allocate(size)</code>\u5206\u914D\u5185\u5B58\uFF0C\u7136\u540E\u5C06\u5185\u5BB9\u62F7\u8D1D\u8FC7\u53BB</li><li><code>new Buffer(arrayBuffer)</code>\uFF1A\u901A\u8FC7C++\u5C42\u9762\u7684<code>binding.createFromArrayBuffer(obj)</code>\u6765\u5206\u914D\u5185\u5B58</li><li><code>new Buffer(array)</code>\uFF1A\u5148\u901A\u8FC7<code>allocate(size)</code>\u5206\u914D\u5185\u5B58\uFF0C\u7136\u540E\u5C06\u6570\u636E\u5199\u5165</li></ul><p>\u8BE5\u90E8\u5206\u7684\u6E90\u7801\u5728\u51FD\u6570<code>fromObject(obj)</code>\u4E2D\uFF0C\u6BD4\u8F83\u7B80\u5355\uFF0C\u4E0D\u505A\u8D58\u8FF0\u3002</p>`,30),e=[p];function r(t,c,y,F,D,i){return a(),n("div",null,e)}const f=s(o,[["render",r]]);export{C as __pageData,f as default};
