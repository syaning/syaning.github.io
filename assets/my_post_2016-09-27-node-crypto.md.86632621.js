import{_ as s,o as a,c as n,a as p}from"./app.c83dc632.js";const l="/assets/mac.dc4a08e8.svg",o="/assets/symmetric.644030a0.gif",e="/assets/asymmetric.b2c1ffe4.gif",t="/assets/signature.e05b917f.svg",u=JSON.parse('{"title":"Node核心模块之crypto","description":"","frontmatter":{"layout":"post","title":"Node核心模块之crypto","date":"2016-09-27 18:00:00 +0800"},"headers":[{"level":2,"title":"Hash","slug":"hash","link":"#hash","children":[]},{"level":2,"title":"HMAC","slug":"hmac","link":"#hmac","children":[]},{"level":2,"title":"Cipher & Decipher","slug":"cipher-decipher","link":"#cipher-decipher","children":[]},{"level":2,"title":"Sign & Verify","slug":"sign-verify","link":"#sign-verify","children":[]}],"relativePath":"my/post/2016-09-27-node-crypto.md"}'),c={name:"my/post/2016-09-27-node-crypto.md"},r=p(`<h2 id="hash" tabindex="-1">Hash <a class="header-anchor" href="#hash" aria-hidden="true">#</a></h2><p>哈希函数（散列函数）主要用于生成消息摘要(Message Digest)，即将任意大小的数据映射到一个固定大小的数据。最常见的如MD5，SHA1等。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">---------  hash function  --------------</span></span>
<span class="line"><span style="color:#A6ACCD;">| input |----------------&gt;| hash value |</span></span>
<span class="line"><span style="color:#A6ACCD;">---------                 --------------</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>在Node中，通过<code>crypto.getHashes()</code>可以查看所支持的哈希算法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHashes</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; [ &#39;DSA&#39;, &#39;DSA-SHA&#39;, &#39;DSA-SHA1&#39;, ... ]</span></span>
<span class="line"></span></code></pre></div><p>下面是一个MD5的例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> hash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createHash</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">md5</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">digest</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(hash)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; a43c1b0aa53a0c908810c06ab1ff3967</span></span>
<span class="line"></span></code></pre></div><h2 id="hmac" tabindex="-1">HMAC <a class="header-anchor" href="#hmac" aria-hidden="true">#</a></h2><p>在了解HMAC之前，需要先了解MAC(Message Authentication Code)，即消息认证码。</p><p>发送方使用MAC算法将消息和密钥进行计算，得到MAC值，然后将消息和MAC值发送出去。接收方拿到数据后，通过相同的MAC算法把消息和密钥进行计算，和收到的MAC值进行比较。如果一致，则说明消息在发送过程中没有被篡改。</p><p><img src="`+l+`" alt="MAC"></p><blockquote><p>图片来源：<a href="https://upload.wikimedia.org/wikipedia/commons/0/08/MAC.svg" target="_blank" rel="noreferrer">https://upload.wikimedia.org/wikipedia/commons/0/08/MAC.svg</a></p></blockquote><p>HMAC即Hash-based Message Authentication Code，即使用一个Hash函数作为MAC算法。例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> hmac </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createHmac</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sha256</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">secret</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">digest</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(hmac)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; 8b5f48702995c1598c573db1e21866a9b825d4a794d169d7060a03605796360b</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/tj/node-cookie-signature" target="_blank" rel="noreferrer">cookie-signature</a>中对cookie签名用的就是HMAC实现。</p><h2 id="cipher-decipher" tabindex="-1">Cipher &amp; Decipher <a class="header-anchor" href="#cipher-decipher" aria-hidden="true">#</a></h2><p>Cipher用于加密，Decipher用于解密。加密分为对称加密和非对称加密。</p><p>对称加密指的是加密和解密使用相同的密钥。例如A向B发消息，A使用密钥进行加密发送给B，B收到密文后使用相同的密钥进行解密从而得到消息明文。由于加密和解密使用的是相同的密钥，因此加入密钥泄露，那么别人截获了消息同样可以进行解密。</p><p><img src="`+o+`" alt="Symmetric key cryptography"></p><blockquote><p>图片来源：<a href="http://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/sy10500_.htm" target="_blank" rel="noreferrer">http://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/sy10500_.htm</a></p></blockquote><p>下面是一个使用aes256算法（对称加密）的例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> cipher </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createCipher</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aes256</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> encrypted </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cipher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">encrypted </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> cipher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">final</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(encrypted)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; fcfb38e53f2400797beb819795f6a459</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> decipher </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createDecipher</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aes256</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> decrypted </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> decipher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(encrypted</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">decrypted </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> decipher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">final</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(decrypted)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; input</span></span>
<span class="line"></span></code></pre></div><p>非对称加密指的是加密和解密使用不同的密钥。通常会有一对公钥和私钥，经过公钥加密的消息只有使用私钥才能解密，经过私钥加密的消息只有经过公钥才能解密。例如A向B发消息，A使用B的公钥加密消息发送出去，B收到密文后使用自己的私钥进行解密。由于B的私钥只有B拥有，因此如果别人截获了密文，也是无法解析的。</p><p><img src="`+e+`" alt="Asymmetric key cryptography"></p><blockquote><p>图片来源：<a href="http://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/sy10500_.htm" target="_blank" rel="noreferrer">http://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/sy10500_.htm</a></p></blockquote><p>下面是使用rsa非对称加密的例子：</p><p>首先通过openssl来生成一对密钥：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">genrsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_private.key</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2048</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-pubout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_private.key</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_public.key</span></span>
<span class="line"></span></code></pre></div><p>然后是加密和解密：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> publicKey </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./key/rsa_public.key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> privateKey </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./key/rsa_private.key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> encryptedData</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> decryptedData</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// encrypt with public key and decrypt with private key</span></span>
<span class="line"><span style="color:#A6ACCD;">encryptedData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">publicEncrypt</span><span style="color:#A6ACCD;">(publicKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(data))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">decryptedData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">privateDecrypt</span><span style="color:#A6ACCD;">(privateKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(encryptedData</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(encryptedData) </span><span style="color:#676E95;font-style:italic;">// 0a31e457f15526230d044bbeb711ec05b97d9f009...</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(decryptedData) </span><span style="color:#676E95;font-style:italic;">// hello world</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// encrypt with private key and decrypt with public key</span></span>
<span class="line"><span style="color:#A6ACCD;">encryptedData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">privateEncrypt</span><span style="color:#A6ACCD;">(privateKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(data))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">decryptedData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">publicDecrypt</span><span style="color:#A6ACCD;">(publicKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(encryptedData</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(encryptedData) </span><span style="color:#676E95;font-style:italic;">// c116c5b501309251cb273bde20e8aa7abe6f4edff...</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(decryptedData) </span><span style="color:#676E95;font-style:italic;">// hello world</span></span>
<span class="line"></span></code></pre></div><h2 id="sign-verify" tabindex="-1">Sign &amp; Verify <a class="header-anchor" href="#sign-verify" aria-hidden="true">#</a></h2><p>Sign用于数字签名，Verify用于验证签名。数字签名原理如图：</p><p><img src="`+t+`" alt="Signature"></p><blockquote><p>图片来源：<a href="https://upload.wikimedia.org/wikipedia/commons/2/2b/Digital_Signature_diagram.svg" target="_blank" rel="noreferrer">https://upload.wikimedia.org/wikipedia/commons/2/2b/Digital_Signature_diagram.svg</a></p></blockquote><p>在之前的非对称加密中，使用公钥进行加密，私钥进行解密。在生成和验证数字签名的时候，会使用私钥进行签名，公钥进行验证。</p><p>通过openssl来生成一对密钥：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">genrsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_private.key</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2048</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-pubout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_private.key</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa_public.key</span></span>
<span class="line"></span></code></pre></div><p>下面是一个签名及验证的例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sign </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createSign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">RSA-SHA256</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">sign</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> private_key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rsa_private.key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> signature </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sign</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(private_key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(signature)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; b9b339491522843e11cf0cc4a2de1ccccc2bff7d0......</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> verify </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createVerify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">RSA-SHA256</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">verify</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> public_key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rsa_public.key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(verify</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verify</span><span style="color:#A6ACCD;">(public_key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> signature</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; true</span></span>
<span class="line"></span></code></pre></div>`,39),y=[r];function D(A,C,F,i,d,h){return a(),n("div",null,y)}const m=s(c,[["render",D]]);export{u as __pageData,m as default};
