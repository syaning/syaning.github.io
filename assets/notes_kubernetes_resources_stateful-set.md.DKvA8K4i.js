import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.C0rDbzzf.js";const p=JSON.parse('{"title":"StatefulSet","description":"","frontmatter":{},"headers":[],"relativePath":"notes/kubernetes/resources/stateful-set.md","filePath":"notes/kubernetes/resources/stateful-set.md"}'),r={name:"notes/kubernetes/resources/stateful-set.md"},o=s('<h1 id="statefulset" tabindex="-1">StatefulSet <a class="header-anchor" href="#statefulset" aria-label="Permalink to &quot;StatefulSet&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>Deployment 所管理的 Pod，可以认为是无状态的，可以任意的水平扩展，Pod 被销毁后，重新创建出来的 Pod 的名字也和之前的不一样。</p><p>StatefulSet 则主要用来管理有状态的应用，例如数据库的主从关系。并且如果一个 Pod 重新创建了，会保持名字永远是和之前一致的。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/" target="_blank" rel="noreferrer">StatefulSets</a></li></ul>',6),l=[o];function n(c,u,d,i,_,f){return a(),t("div",null,l)}const S=e(r,[["render",n]]);export{p as __pageData,S as default};
