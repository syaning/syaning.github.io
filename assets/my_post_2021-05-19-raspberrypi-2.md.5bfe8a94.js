import{_ as s,o as a,c as n,a as e}from"./app.c83dc632.js";const D=JSON.parse('{"title":"树莓派初体验(2)——安装k8s","description":"","frontmatter":{"layout":"post","title":"树莓派初体验(2)——安装k8s","date":"2021-05-19 22:30:00 +0800"},"headers":[{"level":2,"title":"安装容器运行时","slug":"安装容器运行时","link":"#安装容器运行时","children":[]},{"level":2,"title":"安装Docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":2,"title":"安装containerd","slug":"安装containerd","link":"#安装containerd","children":[]},{"level":2,"title":"安装k8s","slug":"安装k8s","link":"#安装k8s","children":[]},{"level":2,"title":"安装Helm","slug":"安装helm","link":"#安装helm","children":[]}],"relativePath":"my/post/2021-05-19-raspberrypi-2.md"}'),l={name:"my/post/2021-05-19-raspberrypi-2.md"},o=e(`<h2 id="安装容器运行时" tabindex="-1">安装容器运行时 <a class="header-anchor" href="#安装容器运行时" aria-hidden="true">#</a></h2><ul><li>如果使用 Docker，参考下面的 “安装Docker”</li><li>如果使用 containerd，参考下面的 “安装containerd”</li></ul><h2 id="安装docker" tabindex="-1">安装Docker <a class="header-anchor" href="#安装docker" aria-hidden="true">#</a></h2><p>参考 <a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">Install Docker Engine on Ubuntu</a>.</p><p>修改 cgroup driver 为 systemd，可以参考 <a href="https://www.ibm.com/docs/pl/cloud-private/3.1.2?topic=ts-changing-cgroup-driver-systemd-red-hat-enterprise-linux" target="_blank" rel="noreferrer">Changing the cgroup driver to systemd on Red Hat Enterprise Linux</a>.</p><blockquote><p>不修改 cgroup driver 也没事，只不顾在安装 k8s 的时候会有一个 warning，不影响。</p></blockquote><h2 id="安装containerd" tabindex="-1">安装containerd <a class="header-anchor" href="#安装containerd" aria-hidden="true">#</a></h2><p>containerd 官方不提供 ARM64 编译版本，因此需要自己编译，参考 <a href="https://github.com/containerd/containerd/blob/master/BUILDING.md" target="_blank" rel="noreferrer">Build containerd from source</a>.</p><p>首先安装 Golang，参考 <a href="https://golang.org/doc/install" target="_blank" rel="noreferrer">Download and install</a>.</p><p>然后安装相关的依赖工具：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/protocolbuffers/protobuf/releases/download/v3.</span><span style="color:#F78C6C;">17.0</span><span style="color:#C3E88D;">/protoc-3.17.0-linux-aarch_64.zip</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unzip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">protoc-3.17.0-linux-aarch_64.zip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">btrfs-progs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libbtrfs-dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gcc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pkg-config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libseccomp-dev</span></span>
<span class="line"></span></code></pre></div><p>手动 build runc：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/opencontainers/runc</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">runc</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span></code></pre></div><p>手动 build containerd 并启动：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/containerd/containerd</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">containerd</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">containerd.service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/systemd/system/</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">daemon-reload</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">containerd.service</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">containerd.service</span></span>
<span class="line"></span></code></pre></div><h2 id="安装k8s" tabindex="-1">安装k8s <a class="header-anchor" href="#安装k8s" aria-hidden="true">#</a></h2><p>首先安装 kubeadm、kubelet、kubectl，参考 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noreferrer">安装 kubeadm</a>。</p><p>然后初始化集群，参考 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noreferrer">使用 kubeadm 创建集群</a>。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">su</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--pod-network-cidr=10.244.0.0/16</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--image-repository=registry.aliyuncs.com/google_containers</span></span>
<span class="line"></span></code></pre></div><p>如果有如下报错：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">error execution phase preflight: [preflight] Some fatal errors occurred:</span></span>
<span class="line"><span style="color:#A6ACCD;">	[ERROR SystemVerification]: missing required cgroups: memory</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>可以参考 <a href="https://askubuntu.com/questions/1189480/raspberry-pi-4-ubuntu-19-10-cannot-enable-cgroup-memory-at-boostrap" target="_blank" rel="noreferrer">Raspberry Pi 4 Ubuntu 19.10 cannot enable cgroup memory at boostrap</a>，修改 <code>/boot/firmware/cmdline.txt</code> 添加 <code>cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1</code> 即可。</p><p>另外由于 google registry 无法访问，这里使用阿里云的 registry 地址。在此有坑，可能报错如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[ERROR ImagePull]: failed to pull image registry.aliyuncs.com/google_containers/coredns/coredns:v1.8.0: output: Error response from daemon: pull access denied for registry.aliyuncs.com/google_containers/coredns/coredns, repository does not exist or may require &#39;docker login&#39;: denied: requested access to the resource is denied</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>如果出现该错误，那么需要手动 pull 一下 coredns 的镜像：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">coredns/coredns:1.8.0</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">coredns/coredns:1.8.0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry.aliyuncs.com/google_containers/coredns/coredns:v1.</span><span style="color:#F78C6C;">8.0</span></span>
<span class="line"></span></code></pre></div><p>集群初始化后：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/.kube</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/kubernetes/admin.conf</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/.kube/config</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">chown</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">id</span><span style="color:#C3E88D;"> -u</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">id</span><span style="color:#C3E88D;"> -g</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/.kube/config</span></span>
<span class="line"></span></code></pre></div><p>然后部署网络插件，参考 <a href="https://kubernetes.io/docs/concepts/cluster-administration/addons/" target="_blank" rel="noreferrer">Installing Addons</a>。</p><p>因为只有一个节点，可以执行如下命令允许 master 节点调度 pod：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">taint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-role.kubernetes.io/master-</span></span>
<span class="line"></span></code></pre></div><h2 id="安装helm" tabindex="-1">安装Helm <a class="header-anchor" href="#安装helm" aria-hidden="true">#</a></h2><p>参考 <a href="https://helm.sh/zh/docs/intro/install/" target="_blank" rel="noreferrer">安装Helm</a>。</p>`,33),p=[o];function t(r,c,i,C,d,y){return a(),n("div",null,p)}const A=s(l,[["render",t]]);export{D as __pageData,A as default};
