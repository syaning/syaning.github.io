import{_ as s,o as n,c as a,a as l}from"./app.5755a543.js";const D=JSON.parse('{"title":"Docker\u51CF\u5C0F\u6784\u5EFA\u7684\u955C\u50CF\u5927\u5C0F","description":"","frontmatter":{"layout":"post","title":"Docker\u51CF\u5C0F\u6784\u5EFA\u7684\u955C\u50CF\u5927\u5C0F","date":"2020-08-22 12:00:00 +0800"},"headers":[{"level":2,"title":"\u7B80\u4ECB","slug":"\u7B80\u4ECB","link":"#\u7B80\u4ECB","children":[]},{"level":2,"title":"\u793A\u4F8B","slug":"\u793A\u4F8B","link":"#\u793A\u4F8B","children":[{"level":3,"title":"Node.js","slug":"node-js","link":"#node-js","children":[]},{"level":3,"title":"\u524D\u7AEF\u5E94\u7528","slug":"\u524D\u7AEF\u5E94\u7528","link":"#\u524D\u7AEF\u5E94\u7528","children":[]},{"level":3,"title":"Go","slug":"go","link":"#go","children":[]}]}],"relativePath":"my/post/2020-08-22-minimize-docker-image.md"}'),e={name:"my/post/2020-08-22-minimize-docker-image.md"},p=l(`<h2 id="\u7B80\u4ECB" tabindex="-1">\u7B80\u4ECB <a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a></h2><p>\u51CF\u5C0F\u6784\u5EFA\u51FA\u6765\u7684\u955C\u50CF\u5927\u5C0F\uFF0C\u901A\u5E38\u8981\u8003\u8651\u4E24\u70B9\uFF1A</p><ol><li>\u57FA\u7840\u955C\u50CF\u8981\u5C0F\uFF0C\u4F8B\u5982\u4F7F\u7528 alpine \u6216\u8005 slim \u955C\u50CF\uFF0C\u5173\u4E8E\u5B83\u4EEC\u7684\u533A\u522B\u53EF\u4EE5\u53C2\u8003 <a href="https://medium.com/swlh/alpine-slim-stretch-buster-jessie-bullseye-bookworm-what-are-the-differences-in-docker-62171ed4531d" target="_blank" rel="noreferrer">Alpine, Slim, Stretch, Buster, Jessie, Bullseye \u2014 What are the Differences in Docker Images?</a></li><li>\u53EA\u628A build \u540E\u7684\u6587\u4EF6\u653E\u5728\u955C\u50CF\u4E2D\uFF0C\u5176\u5B83\u65E0\u5173\u6587\u4EF6\u90FD\u53EF\u4EE5\u5220\u6389\u3002\u5982\u679C\u6784\u5EFA\u9636\u6BB5\u6240\u9700\u73AF\u5883\u5927\u4E8E\u8FD0\u884C\u9636\u6BB5\u6240\u9700\u73AF\u5883\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528 <a href="https://docs.docker.com/develop/develop-images/multistage-build/" target="_blank" rel="noreferrer">multi-stage build</a>\u3002</li></ol><h2 id="\u793A\u4F8B" tabindex="-1">\u793A\u4F8B <a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a></h2><h3 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-hidden="true">#</a></h3><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> node:10-slim</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /usr/src/app</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> . .</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> npm install</span></span>
<span class="line"><span style="color:#F78C6C;">EXPOSE</span><span style="color:#A6ACCD;"> 8080</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;npm&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;start&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="\u524D\u7AEF\u5E94\u7528" tabindex="-1">\u524D\u7AEF\u5E94\u7528 <a class="header-anchor" href="#\u524D\u7AEF\u5E94\u7528" aria-hidden="true">#</a></h3><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># build stage</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> node:10-slim </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> build-stage</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /usr/src/app</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> . .</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> npm install &amp;&amp; npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># deploy stage</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> nginx:1.17-alpine</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> --from=build-stage /usr/src/app/dist/ /usr/share/nginx/html/</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> nginx.conf /etc/nginx/conf.d/default.conf</span></span>
<span class="line"><span style="color:#F78C6C;">EXPOSE</span><span style="color:#A6ACCD;"> 80</span></span>
<span class="line"></span></code></pre></div><p>\u5176\u4E2D <code>nginx.conf</code> \u53C2\u8003\u5982\u4E0B\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">server {</span></span>
<span class="line"><span style="color:#A6ACCD;">    listen 80;</span></span>
<span class="line"><span style="color:#A6ACCD;">    listen [::]:80;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    server_name localhost;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    index index.html;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">        root /usr/share/nginx/html;</span></span>
<span class="line"><span style="color:#A6ACCD;">        index index.html;</span></span>
<span class="line"><span style="color:#A6ACCD;">        try_files $uri $uri/ /index.html;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6CE8\u610F\uFF1A\u8FD9\u91CC\u793A\u4F8B\u4E3B\u8981\u662F\u9488\u5BF9 SPA \u4E14\u4F7F\u7528\u4E86\u57FA\u4E8E history \u7684\u8DEF\u7531\u6A21\u5F0F\u3002\u5426\u5219\u7684\u8BDD\u76F4\u63A5\u4F7F\u7528\u9ED8\u8BA4 Nginx \u914D\u7F6E\u5373\u53EF\u3002</p><h3 id="go" tabindex="-1">Go <a class="header-anchor" href="#go" aria-hidden="true">#</a></h3><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> golang:1.14-alpine </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> build-stage</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /app</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> . .</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> go build -o myapp main.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> alpine:3.12</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /root</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> --from=build-stage /app/myapp .</span></span>
<span class="line"><span style="color:#F78C6C;">EXPOSE</span><span style="color:#A6ACCD;"> 8080</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;./myapp&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><p>\u6CE8\u610F\uFF1A\u8FD9\u91CC\u53EA\u662F\u6700\u7B80\u5355\u7684\u793A\u4F8B\u3002\u5982\u679C\u6D89\u53CA\u5230\u65F6\u95F4\u548C\u65F6\u533A\u7684\u89E3\u6790\uFF0C\u53EF\u80FD alpine \u955C\u50CF\u4E0D\u592A\u8DB3\u591F\uFF0C\u8981\u4E48\u66FF\u6362\u4E3A\u6807\u51C6\u7684 Ubuntu \u6216\u8005 CentOS \u955C\u50CF\uFF1B\u8981\u4E48\u9700\u8981\u5B89\u88C5\u4E00\u4E9B\u76F8\u5173\u7684\u5DE5\u5177\uFF0C\u53C2\u8003\u5982\u4E0B\uFF1A</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">RUN apk update </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	api add tzdata \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	ln -snf /usr/share/zooneinfo/Etc/UTC /etc/localtime </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> Etc/UTC </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> /etc/timezone</span></span>
<span class="line"></span></code></pre></div>`,15),o=[p];function c(t,r,i,C,d,A){return n(),a("div",null,o)}const h=s(e,[["render",c]]);export{D as __pageData,h as default};
